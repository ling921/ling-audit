using Xunit;
using VerifyCS = Ling.Audit.SourceGenerators.Tests.Verifiers.CSharpSourceGeneratorVerifier<
    Ling.Audit.SourceGenerators.AuditPropertyGenerator>;

namespace Ling.Audit.SourceGenerators.Tests;

public class AuditPropertyGeneratorTests
{
    [Fact]
    public async Task GeneratesAuditProperties_ForPartialClass()
    {
        const string source = """
            using Ling.Audit;

            namespace Test
            {
                public partial class MyEntity : IHasCreator<string>, IHasCreationTime
                {
                }
            }
            """;

        var generatedCode = $$"""
            // <auto-generated/>

            #pragma warning disable
            #nullable enable annotations

            namespace Test
            {
                [global::System.CodeDom.Compiler.GeneratedCode("Ling.Audit.SourceGenerators", "{{AuditDefaults.Version}}")]
                [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                partial class MyEntity
                {
                    /// <inheritdoc cref="global::Ling.Audit.IHasCreator{TKey}.CreatedBy"/>
                    public virtual global::System.String? CreatedBy { get; set; }

                    /// <inheritdoc cref="global::Ling.Audit.IHasCreationTime.CreatedAt"/>
                    public virtual global::System.DateTimeOffset CreatedAt { get; set; }
                }
            }

            """;

        await VerifyCS.VerifySourceGeneratorAsync(source, ("Test.MyEntity.g.cs", generatedCode));
    }

    [Fact]
    public async Task GeneratesAuditProperties_ForSealedClass()
    {
        const string source = """
            using Ling.Audit;

            namespace Test
            {
                public sealed partial class MyEntity : IHasCreator<string>
                {
                }
            }
            """;

        var generatedCode = $$"""
            // <auto-generated/>

            #pragma warning disable
            #nullable enable annotations

            namespace Test
            {
                [global::System.CodeDom.Compiler.GeneratedCode("Ling.Audit.SourceGenerators", "{{AuditDefaults.Version}}")]
                [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                partial class MyEntity
                {
                    /// <inheritdoc cref="global::Ling.Audit.IHasCreator{TKey}.CreatedBy"/>
                    public global::System.String? CreatedBy { get; set; }
                }
            }

            """;

        await VerifyCS.VerifySourceGeneratorAsync(source, ("Test.MyEntity.g.cs", generatedCode));
    }

    [Fact]
    public async Task GeneratesAuditProperties_ForNestedClass()
    {
        const string source = """
            using Ling.Audit;

            namespace Test
            {
                public class Container
                {
                    public partial class MyEntity : IHasCreator<string>
                    {
                    }
                }
            }
            """;

        var generatedCode = $$"""
            // <auto-generated/>

            #pragma warning disable
            #nullable enable annotations

            namespace Test
            {
                partial class Container
                {
                    [global::System.CodeDom.Compiler.GeneratedCode("Ling.Audit.SourceGenerators", "{{AuditDefaults.Version}}")]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    partial class MyEntity
                    {
                        /// <inheritdoc cref="global::Ling.Audit.IHasCreator{TKey}.CreatedBy"/>
                        public virtual global::System.String? CreatedBy { get; set; }
                    }
                }
            }

            """;

        await VerifyCS.VerifySourceGeneratorAsync(source, ("Test.Container.MyEntity.g.cs", generatedCode));
    }

    [Fact]
    public async Task GeneratesAuditProperties_SkipsExistingProperties()
    {
        const string source = """
            using Ling.Audit;

            namespace Test
            {
                public partial class MyEntity : IHasCreator<string>, IHasCreationTime
                {
                    public string? CreatedBy { get; set; }
                }
            }
            """;

        var generatedCode = $$"""
            // <auto-generated/>

            #pragma warning disable
            #nullable enable annotations

            namespace Test
            {
                [global::System.CodeDom.Compiler.GeneratedCode("Ling.Audit.SourceGenerators", "{{AuditDefaults.Version}}")]
                [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                partial class MyEntity
                {
                    /// <inheritdoc cref="global::Ling.Audit.IHasCreationTime.CreatedAt"/>
                    public virtual global::System.DateTimeOffset CreatedAt { get; set; }
                }
            }

            """;

        await VerifyCS.VerifySourceGeneratorAsync(source, ("Test.MyEntity.g.cs", generatedCode));
    }

    [Fact]
    public async Task GeneratesAuditProperties_ForCompositeInterfaces()
    {
        const string source = """
            using Ling.Audit;

            namespace Test
            {
                public partial class MyEntity : ICreationAudited<string>
                {
                }
            }
            """;

        var generatedCode = $$"""
            // <auto-generated/>

            #pragma warning disable
            #nullable enable annotations

            namespace Test
            {
                [global::System.CodeDom.Compiler.GeneratedCode("Ling.Audit.SourceGenerators", "{{AuditDefaults.Version}}")]
                [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                partial class MyEntity
                {
                    /// <inheritdoc cref="global::Ling.Audit.IHasCreator{TKey}.CreatedBy"/>
                    public virtual global::System.String? CreatedBy { get; set; }

                    /// <inheritdoc cref="global::Ling.Audit.IHasCreationTime.CreatedAt"/>
                    public virtual global::System.DateTimeOffset CreatedAt { get; set; }
                }
            }

            """;

        await VerifyCS.VerifySourceGeneratorAsync(source, ("Test.MyEntity.g.cs", generatedCode));
    }

    [Fact]
    public async Task GeneratesAuditProperties_ForInheritedInterfaces()
    {
        const string source = """
            using Ling.Audit;

            namespace Test
            {
                public interface IMyInterface : IHasCreator<string> { }

                public partial class MyEntity : IMyInterface
                {
                }
            }
            """;

        var generatedCode = $$"""
            // <auto-generated/>

            #pragma warning disable
            #nullable enable annotations

            namespace Test
            {
                [global::System.CodeDom.Compiler.GeneratedCode("Ling.Audit.SourceGenerators", "{{AuditDefaults.Version}}")]
                [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                partial class MyEntity
                {
                    /// <inheritdoc cref="global::Ling.Audit.IHasCreator{TKey}.CreatedBy"/>
                    public virtual global::System.String? CreatedBy { get; set; }
                }
            }

            """;

        await VerifyCS.VerifySourceGeneratorAsync(source, ("Test.MyEntity.g.cs", generatedCode));
    }

    [Fact]
    public async Task GeneratesAuditProperties_ForGenericClass()
    {
        const string source = """
            using Ling.Audit;

            namespace Test
            {
                public partial class MyEntity<TKey> : IHasCreator<TKey?>
                    where TKey : struct
                {
                }
            }
            """;

        var generatedCode = $$"""
            // <auto-generated/>

            #pragma warning disable
            #nullable enable annotations

            namespace Test
            {
                [global::System.CodeDom.Compiler.GeneratedCode("Ling.Audit.SourceGenerators", "{{AuditDefaults.Version}}")]
                [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                partial class MyEntity<TKey>
                {
                    /// <inheritdoc cref="global::Ling.Audit.IHasCreator{TKey}.CreatedBy"/>
                    public virtual global::System.Nullable<TKey> CreatedBy { get; set; }
                }
            }

            """;

        await VerifyCS.VerifySourceGeneratorAsync(source, ("Test.MyEntity_1.g.cs", generatedCode));
    }

    [Fact]
    public async Task GeneratesAuditProperties_ForNestedGenericClass()
    {
        const string source = """
            using Ling.Audit;

            namespace Test
            {
                public partial record Container<T1, T2>
                {
                    public partial class MyEntity<T3> : IHasCreator<string>
                    {
                    }
                }
            }
            """;

        var generatedCode = $$"""
            // <auto-generated/>

            #pragma warning disable
            #nullable enable annotations

            namespace Test
            {
                partial record Container<T1, T2>
                {
                    [global::System.CodeDom.Compiler.GeneratedCode("Ling.Audit.SourceGenerators", "{{AuditDefaults.Version}}")]
                    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                    partial class MyEntity<T3>
                    {
                        /// <inheritdoc cref="global::Ling.Audit.IHasCreator{TKey}.CreatedBy"/>
                        public virtual global::System.String? CreatedBy { get; set; }
                    }
                }
            }

            """;

        await VerifyCS.VerifySourceGeneratorAsync(source, ("Test.Container_2.MyEntity_1.g.cs", generatedCode));
    }
}
