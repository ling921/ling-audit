//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ling.Audit.SourceGenerators.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ling.Audit.SourceGenerators.Resources.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All audit interfaces implemented by a type must use the same key type. Review and align the key types across interfaces..
        /// </summary>
        internal static string AuditKeyTypeMismatch_Description {
            get {
                return ResourceManager.GetString("AuditKeyTypeMismatch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; has multiple key types in audit interfaces: {1}.
        /// </summary>
        internal static string AuditKeyTypeMismatch_Message {
            get {
                return ResourceManager.GetString("AuditKeyTypeMismatch_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key type mismatch in audit interfaces.
        /// </summary>
        internal static string AuditKeyTypeMismatch_Title {
            get {
                return ResourceManager.GetString("AuditKeyTypeMismatch_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value types cannot be audited because they are copied by value and do not maintain identity. Consider using a reference type instead..
        /// </summary>
        internal static string AuditNotSupportedForValueType_Description {
            get {
                return ResourceManager.GetString("AuditNotSupportedForValueType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; is a value type and cannot be audited.
        /// </summary>
        internal static string AuditNotSupportedForValueType_Message {
            get {
                return ResourceManager.GetString("AuditNotSupportedForValueType_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audit operations not supported on value types.
        /// </summary>
        internal static string AuditNotSupportedForValueType_Title {
            get {
                return ResourceManager.GetString("AuditNotSupportedForValueType_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type must be declared as partial to allow source generator to implement audit functionality. Add the &apos;partial&apos; modifier to the type declaration..
        /// </summary>
        internal static string AuditRequiresPartialType_Description {
            get {
                return ResourceManager.GetString("AuditRequiresPartialType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; must be declared as partial to support auditing.
        /// </summary>
        internal static string AuditRequiresPartialType_Message {
            get {
                return ResourceManager.GetString("AuditRequiresPartialType_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type must be partial for audit support.
        /// </summary>
        internal static string AuditRequiresPartialType_Title {
            get {
                return ResourceManager.GetString("AuditRequiresPartialType_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A more comprehensive audit interface is available that provides additional auditing capabilities. Consider using it for better audit coverage..
        /// </summary>
        internal static string UseAuditedInterface_Description {
            get {
                return ResourceManager.GetString("UseAuditedInterface_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider using {0} interface instead.
        /// </summary>
        internal static string UseAuditedInterface_Message {
            get {
                return ResourceManager.GetString("UseAuditedInterface_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider using more comprehensive audit interface.
        /// </summary>
        internal static string UseAuditedInterface_Title {
            get {
                return ResourceManager.GetString("UseAuditedInterface_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method-based audit interfaces provide more flexibility and control over audit operations. Consider switching from property-based to method-based interface..
        /// </summary>
        internal static string UseNonPropertyInterface_Description {
            get {
                return ResourceManager.GetString("UseNonPropertyInterface_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider using {0} interface instead.
        /// </summary>
        internal static string UseNonPropertyInterface_Message {
            get {
                return ResourceManager.GetString("UseNonPropertyInterface_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider using method-based audit interface.
        /// </summary>
        internal static string UseNonPropertyInterface_Title {
            get {
                return ResourceManager.GetString("UseNonPropertyInterface_Title", resourceCulture);
            }
        }
    }
}
